/*
 ============================================================================
 Name        : HeaderFile.c
 Author      : 
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define ROW 100
#define COLUMN 100

//
//#define true 1
//#define false 0

int sizeOfIntegerArray(int array[]){
	int i;
	for(i = 0; i < ROW; i++){
		if(array[i] == NULL)
			return i;
	}
return i;
}

int sizeOf2DArray(int array[][COLUMN]){
	int i;
	for(i = 0;i < ROW; i++){
		if(array[i][0] == NULL)
			return i;
		}
}

void nullify1DArray(int array[]){
	int i;
	for(i = 0; i<ROW; i++){
		array[i] = NULL;
	}
}

void nullify2DArray(int array[][COLUMN]){
	int i,j;
	for(i = 0; i < ROW; i++){
	for(j = 0; j < COLUMN; j++)
		array[i][j] = NULL;
	}
}

void insertionSort(int array[], int sizeOfIntegerArray)
{
   int i, pivot, key;
   for (i = 1; i < sizeOfIntegerArray; i++)
   {
       pivot = array[i];
       key = i-1;

       while (key >= 0 && array[key] > pivot)
       {
           array[key+1] = array[key];
           key = key-1;
       }
       array[key+1] = key;
   }
}


//sizeOfCharArrayNew keeps a counter to calculate the size of a char array.

int sizeOfCharArrayNew(char array[]){
	int i = 0;
	while(array[i]!='\0'){
		i++;
		}
	return i+1;
}

void containsSubString(char array[], char array2[]){
	int i= 0, j=0, nextIndex = 0;
	int found = 0;
	//found is a flag to keep track of all the characters in the string
	//if a character does not exits in main string, then the substring is
	//declared as "not a substring".
	for(i=0; i<sizeOfCharArrayNew(array2); i++){
		for(j = nextIndex; j<sizeOfCharArrayNew(array); j++){

			//nextIndex keeps the track the main string traversed
			//so as to avoid starting search of a next substring character from zero.

			if( array2[i] == array[j] && array[j] != '\0'){
				printf("Character found at index: %d", j);
				printf("\t");
				found +=1;
				nextIndex = j+1;
				break;
			}
		}
	}

	//although all the indexes of main string array are printed if substring
	//characters match main string, but the final result (if substring is not found)
	//is printed via the following check of 'found' flag.

	if(found+1 < sizeOfCharArrayNew(array2))
		printf("\nNo substring found");

}


int main() {

	setvbuf(stdout, NULL, _IONBF, 0);

	int size = 10;
	char arr[size], arr2[size];
	//get input for the first string and store in char array(arr)
	printf("Enter the first String : ");
	scanf("%s", &arr);

	//get input string and store in char array(arr2) to find if that string exists as substring.
	printf("Enter the substring to find : ");
	scanf("%s", &arr2);

	//the following function will take two input char arrays and will find if the substring
	//exists or not.
	//the function also calls sizeOfCharArrayNew function to find the array length.
	containsSubString(arr, arr2);


	return EXIT_SUCCESS;


}
